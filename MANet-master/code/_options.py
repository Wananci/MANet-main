# -*- coding: utf-8 -*-

import argparse
parser = argparse.ArgumentParser()
parser.add_argument('--epoch', type=int, default=60, help='epoch number')
parser.add_argument('--lr', type=float, default=0.001, help='learning rate')
parser.add_argument('--batchsize', type=int, default=12, help='training batch size')
parser.add_argument('--warmup', type=int, default=5, help='warmup epoch')
parser.add_argument('--trainsize', type=int, default=384, help='training dataset size')
parser.add_argument('--clip', type=float, default=0.5, help='gradient clipping margin')
parser.add_argument('--decay_rate', type=float, default=0.1, help='decay rate of learning rate')
parser.add_argument('--scheduler', type=str, default='poly', help='poly learning rate decay strategy')
parser.add_argument('--load', type=str, default='./swin_base_patch4_window12_384_22k.pth', help='train from checkpoints')
parser.add_argument('--load_pre', type=str, default='./save/checkpoints/SwinTransNet_ref_epoch_best.pth', help='train from checkpoints')
# parser.add_argument('--gpu_id', type=str, default='0', help='train use gpu')
parser.add_argument('--rgb_root', type=str, default='../dataset/NSRD/images/training/', help='the training rgb images root')
# parser.add_argument('--depth_root', type=str, default='./RGBD_train/depth/', help='the training depth images root')
parser.add_argument('--gt_root', type=str, default='../dataset/NSRD/annotations/training/', help='the training gt images root')
parser.add_argument('--edge_root', type=str, default='../dataset/NSRD/annotations/training_edge/', help='the training edge images root')
parser.add_argument('--test_rgb_root', type=str, default='../dataset/NSRD/images/validation/', help='the test gt images root')
# parser.add_argument('--test_depth_root', type=str, default='./RGBD_train/val/depth/', help='the test gt images root')
parser.add_argument('--test_gt_root', type=str, default='../dataset/NSRD/annotations/validation/', help='the test gt images root')
parser.add_argument('--test_edge_root', type=str, default='../dataset/NSRD/annotations/validation_edge/', help='the test edge images root')
parser.add_argument('--save_path', type=str, default='../save/checkpoints/', help='the path to save models and logs')
opt = parser.parse_args()